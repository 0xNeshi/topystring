name: Release

on:
  release:
    types: [ created, published ]

jobs:
  release:

    runs-on: windows-latest
    
    defaults:
      run:
        working-directory: src
        
    steps:
    - uses: actions/checkout@v2
    - name: ðŸ”¨ Use .NET Core 2.0 SDK
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '2.0.x'        
    # for explanation of the hack see: https://github.com/actions/setup-dotnet/issues/25#issuecomment-646925506  
    - name: ðŸª“ **DOTNET HACK** ðŸª“
      shell: pwsh
      run: |
        $version = Split-Path (Split-Path $ENV:DOTNET_ROOT -Parent) -Leaf;
        $root = Split-Path (Split-Path $ENV:DOTNET_ROOT -Parent) -Parent;
        $directories = Get-ChildItem $root | Where-Object { $_.Name -ne $version };
        foreach ($dir in $directories) {
          $from = $dir.FullName;
          $to = "$root/$version";
          Write-Host Copying from $from to $to;
          Copy-Item "$from\*" $to -Recurse -Force;
        }
    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: Run tests
      run: dotnet test --no-restore --verbosity normal
    - name: Generate NuGet package
      run: |  
        cd Collections.Extensions.ToPyString
        dotnet pack -c Release -o out --no-restore --no-build
    - name: Push generated package to NuGet registry
      run: dotnet nuget push Collections.Extensions.ToPyString\out\*.nupkg -k ${{ secrets.NUGET_API_KEY }} -s https://api.nuget.org/v3/index.json --no-symbols true --skip-duplicate
