name: Build & Test .NET Library

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]
    paths:
      - 'src/**'

jobs:
  build:

    runs-on: ${{ matrix.os }}
    
    defaults:
      run:
        working-directory: src

    strategy:
      fail-fast: false
      matrix:
        # os: [ubuntu-20.04, ubuntu-22.04, ubuntu-24.04, macos-latest, windows-latest]
        os: [windows-latest]
        dotnet: [ '2.1.x' ]
        # dotnet: [ '2.1.x', '2.2.x', '3.0.x', '3.1.x', '5.0.x', '6.0.x', '7.0.x', '8.0.x', '9.0.x' ]
        
        exclude:
          # Ubuntu 16.04 supports < 5.0
          - os: ubuntu-16.04
            dotnet: '5.0.x'
          - os: ubuntu-16.04
            dotnet: '6.0.x'
          - os: ubuntu-16.04
            dotnet: '7.0.x'
          - os: ubuntu-16.04
            dotnet: '8.0.x'
          - os: ubuntu-16.04
            dotnet: '9.0.x'

          # Ubuntu 18.04 supports only up to 6.0.x
          - os: ubuntu-18.04
            dotnet: '7.0.x'
          - os: ubuntu-18.04
            dotnet: '8.0.x'
          - os: ubuntu-18.04
            dotnet: '9.0.x'

          # Ubuntu 20.04 does not support 9.0.x
          - os: ubuntu-20.04
            dotnet: '9.0.x'

          # Ubuntu 22.04 does not support 2.1.x, 2.2.x and 5.0.x
          - os: ubuntu-22.04
            dotnet: '2.1.x'
          - os: ubuntu-22.04
            dotnet: '2.2.x'
          - os: ubuntu-22.04
            dotnet: '5.0.x'

          # Ubuntu 24.04 does not support < 6.0.x
          - os: ubuntu-24.04
            dotnet: '2.1.x'
          - os: ubuntu-24.04
            dotnet: '2.2.x'
          - os: ubuntu-24.04
            dotnet: '3.0.x'
          - os: ubuntu-24.04
            dotnet: '3.1.x'
          - os: ubuntu-24.04
            dotnet: '5.0.x'

          # MacOS does not support < 8.0.x
          - os: macos-latest
            dotnet: '2.1.x'
          - os: macos-latest
            dotnet: '2.2.x'
          - os: macos-latest
            dotnet: '3.0.x'
          - os: macos-latest
            dotnet: '3.1.x'
          - os: macos-latest
            dotnet: '5.0.x'
          - os: macos-latest
            dotnet: '6.0.x'
          - os: macos-latest
            dotnet: '7.0.x'

    name: .NET ${{ matrix.dotnet }} on ${{ matrix.os }}
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Determine Test Project
        shell: bash
        run: |
          VERSION_DIGITS=$(echo "${{ matrix.dotnet }}" | grep -oE '^[0-9]+\.[0-9]')
          CONCAT_DIGITS=$(echo "$VERSION_DIGITS" | tr -d '.')
          if [ "$CONCAT_DIGITS" -lt 50 ]; then
            echo "PROJECT=Collections.Extensions.ToPyString.NetCore${CONCAT_DIGITS}.Tests" >> "$GITHUB_ENV"
          else
            echo "PROJECT=Collections.Extensions.ToPyString.Net${CONCAT_DIGITS}.Tests" >> "$GITHUB_ENV"
          fi

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet }}

      - name: Build & Pack NuGet Package
        run: |
          dotnet pack Collections.Extensions.ToPyString/Collections.Extensions.ToPyString.csproj --configuration Release --output ./local-nuget
          
      - name: Install Local NuGet Package Source
        shell: bash
        run: dotnet nuget add source $(pwd)/local-nuget --name LocalNuGet

      - name: Install Dependencies
        run: dotnet restore ${{ env.PROJECT }}
      
      - name: Run Tests
        run: dotnet test ${{ env.PROJECT }} --no-restore --verbosity normal
