name: Build & Test .NET Library

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]
    paths:
      - 'src/**'

jobs:
  build:

    runs-on: ${{ matrix.os }}
    
    defaults:
      run:
        working-directory: src

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, ubuntu-22.04, ubuntu-24.04, macos-latest, windows-latest]
        dotnet: [ '2.1.x', '3.1.x', '5.0.x', '6.0.x', '7.0.x', '8.0.x', '9.0.x' ]
        
        exclude:
          # Ubuntu 16.04 supports only 2.1.x and 3.1.x
          - os: ubuntu-16.04
            dotnet: '5.0.x'
          - os: ubuntu-16.04
            dotnet: '6.0.x'
          - os: ubuntu-16.04
            dotnet: '7.0.x'
          - os: ubuntu-16.04
            dotnet: '8.0.x'
          - os: ubuntu-16.04
            dotnet: '9.0.x'

          # Ubuntu 18.04 supports only up to 6.0.x
          - os: ubuntu-18.04
            dotnet: '7.0.x'
          - os: ubuntu-18.04
            dotnet: '8.0.x'
          - os: ubuntu-18.04
            dotnet: '9.0.x'

          # Ubuntu 20.04 does not support 9.0.x
          - os: ubuntu-20.04
            dotnet: '9.0.x'

          # Ubuntu 22.04 does not support 2.1.x and 5.0.x
          - os: ubuntu-22.04
            dotnet: '2.1.x'
          - os: ubuntu-22.04
            dotnet: '5.0.x'

          # Ubuntu 24.04 does not support 2.1.x, 3.1.x, 5.0.x
          - os: ubuntu-24.04
            dotnet: '2.1.x'
          - os: ubuntu-24.04
            dotnet: '3.1.x'
          - os: ubuntu-24.04
            dotnet: '5.0.x'

          # MacOS does not support 2.1.x, 3.1.x, 5.0.x, 6.0.x, 7.0.x
          - os: macos-latest
            dotnet: '2.1.x'
          - os: macos-latest
            dotnet: '3.1.x'
          - os: macos-latest
            dotnet: '5.0.x'
          - os: macos-latest
            dotnet: '6.0.x'
          - os: macos-latest
            dotnet: '7.0.x'

    name: .NET ${{ matrix.dotnet }} on ${{ matrix.os }}
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Determine Test Project (if Windows)
        if: runner.os == 'Windows'
        run: |
          if ("${{ matrix.dotnet }}" -eq "2.1.x") { echo "PROJECT=Collections.Extensions.ToPyString.NetCore21.Tests" >> $env:GITHUB_ENV }
          elseif ("${{ matrix.dotnet }}" -eq "3.1.x") { echo "PROJECT=Collections.Extensions.ToPyString.NetCore31.Tests" >> $env:GITHUB_ENV }
          elseif ("${{ matrix.dotnet }}" -eq "5.0.x") { echo "PROJECT=Collections.Extensions.ToPyString.Net50.Tests" >> $env:GITHUB_ENV }
          elseif ("${{ matrix.dotnet }}" -eq "6.0.x") { echo "PROJECT=Collections.Extensions.ToPyString.Net60.Tests" >> $env:GITHUB_ENV }
          elseif ("${{ matrix.dotnet }}" -eq "7.0.x") { echo "PROJECT=Collections.Extensions.ToPyString.Net70.Tests" >> $env:GITHUB_ENV }
          elseif ("${{ matrix.dotnet }}" -eq "8.0.x") { echo "PROJECT=Collections.Extensions.ToPyString.Net80.Tests" >> $env:GITHUB_ENV }
          elseif ("${{ matrix.dotnet }}" -eq "9.0.x") { echo "PROJECT=Collections.Extensions.ToPyString.Net90.Tests" >> $env:GITHUB_ENV }
          else { Write-Error "Unsupported .NET version: ${{ matrix.dotnet }}" }
      
      - name: Determine Test Project (if UNIX)
        if: runner.os == 'macOS' || runner.os == 'Linux'
        run: |
          case "${{ matrix.dotnet }}" in
            "2.1.x") echo "PROJECT=Collections.Extensions.ToPyString.NetCore21.Tests" >> "$GITHUB_ENV" ;;
            "3.1.x") echo "PROJECT=Collections.Extensions.ToPyString.NetCore31.Tests" >> "$GITHUB_ENV" ;;
            "5.0.x") echo "PROJECT=Collections.Extensions.ToPyString.Net50.Tests" >> "$GITHUB_ENV" ;;
            "6.0.x") echo "PROJECT=Collections.Extensions.ToPyString.Net60.Tests" >> "$GITHUB_ENV" ;;
            "7.0.x") echo "PROJECT=Collections.Extensions.ToPyString.Net70.Tests" >> "$GITHUB_ENV" ;;
            "8.0.x") echo "PROJECT=Collections.Extensions.ToPyString.Net80.Tests" >> "$GITHUB_ENV" ;;
            "9.0.x") echo "PROJECT=Collections.Extensions.ToPyString.Net90.Tests" >> "$GITHUB_ENV" ;;
            *) echo "Error: Unsupported .NET version: ${{ matrix.dotnet }}" && exit 1 ;;
          esac

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet }}

      - name: Install Dependencies
        run: dotnet restore ${{ env.PROJECT }}
      
      - name: Build Library
        run: dotnet build ${{ env.PROJECT }} --configuration Release --no-restore
      
      - name: Run Tests
        run: dotnet test ${{ env.PROJECT }} --no-restore --verbosity normal
